name: Node CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: davipay_test
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: davipay_test
      NODE_ENV: test
      JWT_SECRET: supersecreto
      JWT_EXPIRES_IN: 1h
      PORT: 3000

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Esperar a que PostgreSQL esté listo
        run: |
          echo "Esperando a que PostgreSQL esté listo..."
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 && echo "Postgres está listo" && exit 0
            echo "Esperando..."
            sleep 2
          done
          echo "Postgres no respondió a tiempo." && exit 1
        
      - name: Inicializar base de datos
        run: npm run db:init

      - name: Ejecutar tests
        run: npm test

      - name: Inicializar base de datos
        run: npm run db:init

      - name: Reporte de cobertura
        run: npm run test:coverage
